@model BookWorm.Models.Order

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Order</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Surname" class="control-label"></label>
                <input asp-for="Surname" class="form-control" />
                <span asp-validation-for="Surname" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Payment" class="control-label"></label>
                <select asp-for="Payment" class="custom-select" asp-items="Html.GetEnumSelectList<BookWorm.Models.Payment>()"></select>
                <span asp-validation-for="Payment" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LoyaltyPoints" class="control-label"></label>
                <input asp-for="LoyaltyPoints" class="form-control" />
                <span asp-validation-for="LoyaltyPoints" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.OrderedItems[0].Item1.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderedItems[0].Item1.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderedItems[0].Item1.Image)
            </th>
            <th>
                Quantity
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.OrderedItems)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Item1.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Item1.Price)
                </td>
                <td>
                    @if (item.Item1.ImagePath == null)
                    {
                        <img src="/image/no_image.jpg" width=50 height=50 />
                    }
                    else
                    {
                        <img src="/@item.Item1.ImagePath" width=50 height=50 />
                    }
                </td>
                <td>
                    @item.Item2
                </td>
            </tr>
        <td colspan=100>
            Total: @ViewBag.Total
        </td>
        }
    </tbody>
</table>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
